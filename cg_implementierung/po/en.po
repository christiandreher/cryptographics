msgid ""
msgstr ""
"Project-Id-Version: Cryptographics\n"
"POT-Creation-Date: 2014-02-13 11:02+0100\n"
"PO-Revision-Date: 2014-02-13 11:03+0100\n"
"Last-Translator: Christian Dreher <cdreher3011@gmail.com>\n"
"Language-Team: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: Poedit 1.5.7\n"
"X-Poedit-KeywordsList: tr;trc;trn:1,2\n"
"X-Poedit-SourceCharset: UTF-8\n"
"X-Poedit-Basepath: .\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Poedit-SearchPath-0: ../src\n"

#: ../src/edu/kit/iks/Cryptographics/IdlePopoverView.java:96
msgid ""
"You haven't done anything in a while. To keep this exhibit functional, the "
"system will reset itself soon. If you want to continue using the system, "
"just dismiss this dialog."
msgstr ""

#: ../src/edu/kit/iks/Cryptographics/IdlePopoverView.java:113
#: ../src/edu/kit/iks/Cryptographics/DiffieHellman/Experiment/DHExperimentView.java:98
msgid "Continue"
msgstr ""

#: ../src/edu/kit/iks/Cryptographics/TimelinePopoverView.java:106
msgid "Start"
msgstr ""

#: ../src/edu/kit/iks/Cryptographics/VisualizationContainerView.java:64
msgid "Exit"
msgstr ""

#: ../src/edu/kit/iks/Cryptographics/VisualizationContainerView.java:82
msgid "Help"
msgstr ""

#: ../src/edu/kit/iks/Cryptographics/WelcomeView.java:26
msgid "Welcome"
msgstr ""

#: ../src/edu/kit/iks/Cryptographics/Caesar/CaesarVisualizationInfo.java:85
msgid ""
"Get to know how Ceasar fooled his enemys that intercepted his orders and see "
"one of the oldest attempts to make confidential material unreadable for "
"undesireable readers"
msgstr ""

#: ../src/edu/kit/iks/Cryptographics/Caesar/CaesarVisualizationInfo.java:114
msgid "Caesar"
msgstr ""

#: ../src/edu/kit/iks/Cryptographics/Caesar/Demonstration/CryptoDemonstrationController.java:159
msgid ""
"Great work oh mighty Caesar. May your enemies shutter over your intelligence."
msgstr ""

#: ../src/edu/kit/iks/Cryptographics/Caesar/Demonstration/CryptoDemonstrationController.java:183
msgid "Very nice! Lets encrypt the rest of this childish challenge."
msgstr ""

#: ../src/edu/kit/iks/Cryptographics/Caesar/Demonstration/CryptoDemonstrationController.java:195
#, java-format
msgid "Only {0} left."
msgid_plural "Only {0} left."
msgstr[0] ""
msgstr[1] ""

#: ../src/edu/kit/iks/Cryptographics/Caesar/Demonstration/CryptoDemonstrationController.java:365
msgid ""
"Because of your inferior intelligence you look at the first letter of your "
"name: C.<br>Then you look at the 3rd letter after C and take F. Great!! Now "
"you encrypted the <br>first letter of your name."
msgstr ""

#: ../src/edu/kit/iks/Cryptographics/Caesar/Demonstration/CryptoDemonstrationController.java:389
msgid ""
"As you saw in the first step you need to add to your letter position in the "
"alphabet 3<br>and then you get the position of the needed letter. For "
"example C has the position 2 <br>if you add 2+3 you get 5, which corresponds "
"to the letter F. Now encrypt the next letter.<br>To acomplish this click on "
"the white area and type the needed letter."
msgstr ""

#: ../src/edu/kit/iks/Cryptographics/Caesar/Demonstration/CryptoDemonstrationController.java:416
msgid ""
"Oh mighty Caesar. No one will ever be able to destroy you! Because of that "
"fact lets end <br>this childish games and finish the rest of the fields "
"fast. Then we can send the courier again<br>but this time your enemies will "
"have no idea who wrote it and you will conquer the world."
msgstr ""

#: ../src/edu/kit/iks/Cryptographics/Caesar/Demonstration/CryptoDemonstrationController.java:443
msgid "Not sure if much help needed here."
msgstr ""

#: ../src/edu/kit/iks/Cryptographics/Caesar/Demonstration/CryptoDemonstrationView.java:54
msgid "Back to Introduction"
msgstr ""

#: ../src/edu/kit/iks/Cryptographics/Caesar/Demonstration/CryptoDemonstrationView.java:56
msgid "Go to Experiment."
msgstr ""

#: ../src/edu/kit/iks/Cryptographics/Caesar/Demonstration/CryptoDemonstrationView.java:59
msgid "CAESAR"
msgstr ""

#: ../src/edu/kit/iks/Cryptographics/Caesar/Demonstration/CryptoDemonstrationView.java:79
msgid ""
"Imagine now you are the mighty caesar!! Of course your first idea is to "
"substitute each <br>letter from your name with some other from the alphabet. "
"But which one?"
msgstr ""

#: ../src/edu/kit/iks/Cryptographics/Caesar/Demonstration/CryptoDemonstrationView.java:90
msgid "Proceed!"
msgstr ""

#: ../src/edu/kit/iks/Cryptographics/Caesar/Demonstration/IntroductionController.java:121
msgid ""
"Unfortunately his courier has taken the way through the forest, where "
"Kryptolix chased<br>the wild boars."
msgstr ""

#: ../src/edu/kit/iks/Cryptographics/Caesar/Demonstration/IntroductionController.java:151
msgid ""
"When Kryptolix noticed the unsuspecting and whistling roman courier, he "
"punched him via the air-line<br>back to Rome. And saw him losing a scroll."
msgstr ""

#: ../src/edu/kit/iks/Cryptographics/Caesar/Demonstration/IntroductionController.java:187
msgid ""
"When reading the scroll the courier lost, Kryptolix identified Caesar's "
"plans of<br>conquering Gallia and Kryptolix and his awesome friends could "
"defeat Caesar again!"
msgstr ""

#: ../src/edu/kit/iks/Cryptographics/Caesar/Demonstration/IntroductionController.java:216
msgid ""
"Caesar was raging. But while he was toturing some Gauls suddenly a "
"hellacious and an foolproof idea<br>crossed his mind. In his next message he "
"will encrypt his name! Hue Hue Hue. Help him."
msgstr ""

#: ../src/edu/kit/iks/Cryptographics/Caesar/Demonstration/IntroductionController.java:221
msgid "To caesar's idea"
msgstr ""

#: ../src/edu/kit/iks/Cryptographics/Caesar/Demonstration/IntroductionController.java:244
msgid ""
"If you want to hear the awesome legend about Caesar and Kryptolix press the "
"button below the text. Else try the next button!"
msgstr ""

#: ../src/edu/kit/iks/Cryptographics/Caesar/Demonstration/IntroductionView.java:93
msgid "Skip the introduction"
msgstr ""

#: ../src/edu/kit/iks/Cryptographics/Caesar/Demonstration/IntroductionView.java:114
msgid "Tell me more."
msgstr ""

#: ../src/edu/kit/iks/Cryptographics/Caesar/Demonstration/IntroductionView.java:137
msgid ""
"One fine day, ca 70 B.C., Caesar was puzzling on an ultra-mega-intelligent-"
"plan<br>to finally conquer Gallia and sent it to his generals in Gallia."
msgstr ""

#: ../src/edu/kit/iks/Cryptographics/Caesar/Experiment/CryptoExperimentController.java:70
msgid ""
"If you only see the textfield then put your string in it. Else you've "
"already done it and now you need to encrypt/decrypt the given String."
msgstr ""

#: ../src/edu/kit/iks/Cryptographics/Caesar/Experiment/CryptoExperimentController.java:194
msgid "All done right!"
msgstr ""

#: ../src/edu/kit/iks/Cryptographics/Caesar/Experiment/CryptoExperimentController.java:199
msgid ""
"Next step is to decrypt a given message!! When you accomplish it, then even "
"the NSA and Kryptochef together<br>are superior to your power. Now lets move "
"on. Click the button in the right top corner."
msgstr ""

#: ../src/edu/kit/iks/Cryptographics/Caesar/Experiment/CryptoExperimentController.java:214
#, java-format
msgid "You have {0} left!"
msgid_plural "You have {0} left!"
msgstr[0] ""
msgstr[1] ""

#: ../src/edu/kit/iks/Cryptographics/Caesar/Experiment/CryptoExperimentController.java:331
msgid ""
"In the steps before you learned how to encrypt a given message.<br>But what "
"does it help you to encrypt messages when noone can decrypt them?<br>Now we "
"are going to help us by ourselves. Lets think logically. When we shift<br>a "
"letter to 3 positions forwards, then we can get back to it when we shift the "
"given<br>cipher 3 positions back! The important fact is also that we can "
"shift up to 25 positions back<br>as we can shift 25 positions forward. Lets "
"try this one. Remember: The key you added <br>while encrypting, now needs to "
"be substracted!"
msgstr ""

#: ../src/edu/kit/iks/Cryptographics/Caesar/Experiment/CryptoExperimentController.java:343
msgid "Go to histograms"
msgstr ""

#: ../src/edu/kit/iks/Cryptographics/Caesar/Experiment/CryptoExperimentController.java:416
msgid "Your input is invalid. Please try another one!"
msgstr ""

#: ../src/edu/kit/iks/Cryptographics/Caesar/Experiment/CryptoExperimentController.java:431
msgid "This input is ok. Now only the key is left."
msgstr ""

#: ../src/edu/kit/iks/Cryptographics/Caesar/Experiment/CryptoExperimentController.java:554
msgid ""
"This key is not valid. Please put a number between 1 and 25.<br>For "
"demonstration purposes the keys between -1 and -25 are not "
"necessary<br>therefore not possible, but could be used in general as keys "
"too. And 0 as key has no<br> sense, if you dont understand why, then go back "
"to Introduction."
msgstr ""

#: ../src/edu/kit/iks/Cryptographics/Caesar/Experiment/CryptoExperimentController.java:573
msgid "The key field is empty!"
msgstr ""

#: ../src/edu/kit/iks/Cryptographics/Caesar/Experiment/CryptoExperimentController.java:604
msgid "This key is ok. Now put your name into the bigger box to the left."
msgstr ""

#: ../src/edu/kit/iks/Cryptographics/Caesar/Experiment/CryptoExperimentView.java:56
msgid "Encrypt"
msgstr ""

#: ../src/edu/kit/iks/Cryptographics/Caesar/Experiment/CryptoExperimentView.java:60
msgid "Back to demonstration."
msgstr ""

#: ../src/edu/kit/iks/Cryptographics/Caesar/Experiment/CryptoExperimentView.java:62
msgid "Go to Decryption."
msgstr ""

#: ../src/edu/kit/iks/Cryptographics/Caesar/Experiment/CryptoExperimentView.java:73
msgid ""
"Ok. Previously you saw that you can encrypt a message with the traditional "
"Caesar cipher<br>when you shift each letter 3 positions next in the "
"alphabet. Lets think a little further.<br>When we can shift 3 positions to "
"substitute A with D, then we can also shift 1,2,4,5,6,...,25 positions."
"<br>And substitute A with some other letter. The shift value is called the "
"'Key'. The Key in the examples before was 3.<br>The key is needed when you "
"want to decrypt a cipher. Without the key it would costs much more "
"effort<br> and in most cases uneligible. <br>Now you have 2 options:"
"<br><br>1. You put you own key and plaintext into the textfield.<br><br>2.Or "
"you just click generate and this awesome programm generates you everything "
"you need with real real complex calculations."
msgstr ""

#: ../src/edu/kit/iks/Cryptographics/Caesar/Experiment/CryptoExperimentView.java:111
msgid "Now it is up to you. Test your skills. Remember the key is"
msgstr ""

#: ../src/edu/kit/iks/Cryptographics/Caesar/Experiment/CryptoExperimentView.java:116
msgid ""
"You need to add the key to the position of the letter your want to shift to "
"get<br>the needed cipher. If you get a bigger number then 25 you need to "
"subtract 25 from it. <br>For example: You want to encrypt X with the key 3. "
"When you add 3 to X you get 23 + 3 = 26. <br>26 is obvious bigger then 25. "
"Then you subtract 26 - 25 = 1. This is your cipher. <br>It is also called "
"modulo calculation. For example 26 mod 25 = 1. But this is a little more "
"complex<br>and therefore not important here. You will see more in the "
"Vigenère visualization."
msgstr ""

#: ../src/edu/kit/iks/Cryptographics/Caesar/Experiment/CryptoExperimentView.java:205
msgid "Put your name in here!"
msgstr ""

#: ../src/edu/kit/iks/Cryptographics/Caesar/Experiment/CryptoExperimentView.java:232
msgid "Generate letters!"
msgstr ""

#: ../src/edu/kit/iks/Cryptographics/Caesar/Experiment/CryptoModel.java:121
msgid "Oh no. What a pity! It went wrong!"
msgstr ""

#: ../src/edu/kit/iks/Cryptographics/Caesar/Experiment/CryptoModel.java:122
msgid "No my friend. This one doesn't work!"
msgstr ""

#: ../src/edu/kit/iks/Cryptographics/Caesar/Experiment/CryptoModel.java:124
msgid "Ok, dont be frustrated. Though your action was totally wrong."
msgstr ""

#: ../src/edu/kit/iks/Cryptographics/Caesar/Experiment/CryptoModel.java:147
msgid "Great work oh mighty Caesar."
msgstr ""

#: ../src/edu/kit/iks/Cryptographics/Caesar/Experiment/CryptoModel.java:148
msgid "Very nice. I Like!"
msgstr ""

#: ../src/edu/kit/iks/Cryptographics/Caesar/Experiment/CryptoModel.java:150
msgid "No one could've done it better!"
msgstr ""

#: ../src/edu/kit/iks/Cryptographics/Caesar/Experiment/CryptoModel.java:160
msgid "ANNA"
msgstr ""

#: ../src/edu/kit/iks/Cryptographics/Caesar/Experiment/CryptoModel.java:161
msgid "HANNAH"
msgstr ""

#: ../src/edu/kit/iks/Cryptographics/Caesar/Experiment/CryptoModel.java:161
msgid "BANANA"
msgstr ""

#: ../src/edu/kit/iks/Cryptographics/Caesar/Experiment/CryptoModel.java:162
msgid "KOKOS"
msgstr ""

#: ../src/edu/kit/iks/Cryptographics/Caesar/Experiment/CryptoModel.java:163
msgid "KRYPTOCHEF"
msgstr ""

#: ../src/edu/kit/iks/Cryptographics/Caesar/Experiment/CryptoModel.java:164
msgid "HAMSTER"
msgstr ""

#: ../src/edu/kit/iks/Cryptographics/Caesar/Experiment/CryptoModel.java:164
msgid "WASILIJ"
msgstr ""

#: ../src/edu/kit/iks/Cryptographics/Caesar/Experiment/CryptoModel.java:165
msgid "SECRET"
msgstr ""

#: ../src/edu/kit/iks/Cryptographics/Caesar/Experiment/CryptoModel.java:165
msgid "EPSILON"
msgstr ""

#: ../src/edu/kit/iks/Cryptographics/Caesar/Experiment/CryptoModel.java:179
#: ../src/edu/kit/iks/Cryptographics/Caesar/Experiment/HistogramController.java:401
msgid ""
"The diagram you see here shows the frequency of each letter<br>in the text "
"you are reading at the moment. It is called a<br>Histogram. If you would "
"count all E's in this explanation<br>you would get the number you see in the "
"diagram on the column<br>above the letter E. Now the program will encrypt "
"this explanation<br>with an unknown key in a most awesome way and we will "
"see the <br>histogram of the cipher. Click Proceed and see the magic!"
msgstr ""

#: ../src/edu/kit/iks/Cryptographics/Caesar/Experiment/HistogramController.java:70
msgid "Under Constrcution"
msgstr ""

#: ../src/edu/kit/iks/Cryptographics/Caesar/Experiment/HistogramController.java:117
msgid ""
"You found the right key!!! See how easy it is with histograms?<br>If you "
"want to try one more click proceed. Else you can go next to further "
"information<br>There you can learn more about caesar's cipher."
msgstr ""

#: ../src/edu/kit/iks/Cryptographics/Caesar/Experiment/HistogramController.java:138
msgid "The key was wrong."
msgstr ""

#: ../src/edu/kit/iks/Cryptographics/Caesar/Experiment/HistogramController.java:154
msgid ""
"This key is invalid. Please type a number between 1 and 26. If you dont "
"understand why,<br>then go to the stages before and learn how the cipher "
"works."
msgstr ""

#: ../src/edu/kit/iks/Cryptographics/Caesar/Experiment/HistogramController.java:171
msgid "The key field was empty!"
msgstr ""

#: ../src/edu/kit/iks/Cryptographics/Caesar/Experiment/HistogramController.java:327
msgid ""
"You found the secret key and are now able<br>to read the secret message. The "
"Key was"
msgstr ""

#: ../src/edu/kit/iks/Cryptographics/Caesar/Experiment/HistogramController.java:436
msgid ""
"Comrade, as i told you in a chapter before this technique belongs to the "
"science of cryptology<br>And is a little more complicated than the technique "
"before. Just read carefully.<br><br>If you remember not so long ago, when "
"you looked at the histogram of the last explanation<br>the letter 'E' was "
"the most frequent one. When you look at the histogram of the cipher "
"you<br>you can see that now 'H' is the most frequent one. If we think a "
"little further it is logical<br>to assume that when the program encrypted, "
"the letter 'E' on position 5 in the alphabet was shifted<br>3 positions "
"forward to the position 8 and is now the letter 'H'! Now we can assume that "
"the key<br>was 'H' - 'E' = 8 - 5 = 3 . And now we are able to decrypt the "
"cipher. Type the key 3 in the inputfield<br>and let the program decrypt the "
"whole text with this key!"
msgstr ""

#: ../src/edu/kit/iks/Cryptographics/Caesar/Experiment/HistogramController.java:472
msgid "Ok lets try another one!"
msgstr ""

#: ../src/edu/kit/iks/Cryptographics/Caesar/Experiment/HistogramView.java:170
msgid ""
"Great. Up to now you learned how to encrypt or decrypt given letter "
"sequences with a given key.<br>The question is now, how do you decrypt "
"without a key?!<br><br>It is also called 'breaking' the cipher if you try to "
"decrypt without a given key parameter. The following <br>experiments will "
"teach you how to break caesar's cipher. There are always 2 Options when it "
"comes to this.<br><br>1. The First one is the method called 'Brute Force', "
"it means that you just try simply to decrypt with each possible<br>key. This "
"one you will see in the next step.<br><br>2. The Second one is to use "
"cryptology techniques."
msgstr ""

#: ../src/edu/kit/iks/Cryptographics/Caesar/Experiment/HistogramView.java:335
#: ../src/edu/kit/iks/Cryptographics/Caesar/Experiment/HistogramView.java:373
msgid "&darr;Histogram of the cipher.&darr;"
msgstr ""

#: ../src/edu/kit/iks/Cryptographics/Caesar/Experiment/HistogramView.java:408
msgid "Type your key in this&darr; box and click 'Enter'."
msgstr ""

#: ../src/edu/kit/iks/Cryptographics/Caesar/Experiment/HistogramView.java:502
msgid "Back to Experiment"
msgstr ""

#: ../src/edu/kit/iks/Cryptographics/Caesar/Experiment/HistogramView.java:510
msgid "Skip the histograms (Visualization Done)"
msgstr ""

#: ../src/edu/kit/iks/Cryptographics/Caesar/Experiment/HistogramView.java:536
msgid "Proceed"
msgstr ""

#: ../src/edu/kit/iks/Cryptographics/DiffieHellman/DHVisualizationInfo.java:36
msgid ""
"The infamous Diffie-Hellman Key-Exchange explained with a color-mixing "
"analogy. Establish a shared secret, without an Eavesdropper getting the "
"secret too"
msgstr ""

#: ../src/edu/kit/iks/Cryptographics/DiffieHellman/DHVisualizationInfo.java:55
msgid "Diffie-Hellman"
msgstr ""

#: ../src/edu/kit/iks/Cryptographics/DiffieHellman/Demonstration/ColorChannel.java:206
msgid "Alice"
msgstr ""

#: ../src/edu/kit/iks/Cryptographics/DiffieHellman/Demonstration/ColorChannel.java:207
msgid "Bob"
msgstr ""

#: ../src/edu/kit/iks/Cryptographics/DiffieHellman/Demonstration/ColorChannel.java:208
msgid "Eve"
msgstr ""

#: ../src/edu/kit/iks/Cryptographics/DiffieHellman/Demonstration/DemoOneWayView.java:28
#: ../src/edu/kit/iks/Cryptographics/DiffieHellman/Demonstration/DHDemoView.java:67
#: ../src/edu/kit/iks/Cryptographics/DiffieHellman/Demonstration/ExplainAimView.java:26
#: ../src/edu/kit/iks/Cryptographics/DiffieHellman/Demonstration/OnewayView.java:22
msgid "No help"
msgstr ""

#: ../src/edu/kit/iks/Cryptographics/DiffieHellman/Demonstration/DemoOneWayView.java:30
msgid ""
"We use a simple analogy as the one-way function. Mixing colors is an easy "
"process, determining which colors were originally used is a difficult "
"process, thus this acts like an one-way function"
msgstr ""

#: ../src/edu/kit/iks/Cryptographics/DiffieHellman/Demonstration/DHDemoView.java:24
msgid ""
"Now to our Diffie-Hellman Key-Exchange Analogy. Here is how the protocol in "
"principle works. Alice chooses a public color and sends it to Bob. As Eve "
"listens to the channel she gets a copy."
msgstr ""

#: ../src/edu/kit/iks/Cryptographics/DiffieHellman/Demonstration/DHDemoView.java:29
msgid ""
"Next, Alice chooses a private Color, that she keeps for herself, she does "
"not send it. Then she mixes her private Color with the previously sent "
"public Color and sends the mixture to Bob. Note that because we use the "
"mixing of colors as a one-way function, Eve cannot compute which private "
"color Alice used to get the mixture. Keep this in mind, as this is critical "
"to understand why this protocol works. As previous Bob and Eve have the send "
"color, that means the mixture of Alice."
msgstr ""

#: ../src/edu/kit/iks/Cryptographics/DiffieHellman/Demonstration/DHDemoView.java:38
msgid ""
"Now Bob does the exact same thing like Alice did in the previous step. He "
"chooses a private color. Mixes it with the public Color, and sends the "
"mixture to Alice. Eve gets a copy, but can't compute the private color of "
"Bob, because of the one-way function property"
msgstr ""

#: ../src/edu/kit/iks/Cryptographics/DiffieHellman/Demonstration/DHDemoView.java:44
msgid ""
"Now comes the last step. Here we will produce the secret that Alice and Bob "
"know, but Eve doesn't. Alice will mix her private color to the mixture of "
"Bob and Bob will mix his private color to the mixture of Alice. That means "
"we mix three colors, the public color, the private color of Alice, and the "
"private Color of Bob. The trick lies in the combination of the private "
"Colors, that are kept private, through the use of the one-way function and "
"that it doesn't matter in which order we mix the colors. So mixing first the "
"public color with Alices private color and then Bobs private color yields "
"the same color as mixing first the public color with Bobs private color and "
"then Alices private color. In the real world, we need a mathematical "
"operation that does this and color mixing isn't used of course, but the "
"basic principles are the same."
msgstr ""

#: ../src/edu/kit/iks/Cryptographics/DiffieHellman/Demonstration/ExplainAimView.java:28
msgid ""
"Our aim is to exchange a secret on a public channel, without Eve getting the "
"secret too. Therefore we can't simply send the secret, as shown in the "
"figure above as Eve would get the secret too. Thus we need to exchange the "
"secret in a different way"
msgstr ""

#: ../src/edu/kit/iks/Cryptographics/DiffieHellman/Demonstration/OnewayView.java:24
msgid ""
"To achive this, we use something called one-way function. This function is "
"easy to compute in one direction, but difficult to reverse."
msgstr ""

#: ../src/edu/kit/iks/Cryptographics/DiffieHellman/Experiment/CongratsView.java:19
msgid "Congratulations"
msgstr ""

#: ../src/edu/kit/iks/Cryptographics/DiffieHellman/Experiment/DHExperimentView.java:32
msgid ""
"Now it is your turn! Choose a public color, which will be the basis for the "
"coming operations. If you are finished choosing, click the 'send color' "
"button to send it to Bob."
msgstr ""

#: ../src/edu/kit/iks/Cryptographics/DiffieHellman/Experiment/DHExperimentView.java:36
msgid ""
"Now you can choose a private color which you can mix with the public color "
"you previously send to Bob. If you have choosen the color you liked, click "
"the 'Mix with public color' button"
msgstr ""

#: ../src/edu/kit/iks/Cryptographics/DiffieHellman/Experiment/DHExperimentView.java:40
msgid ""
"The next step is to send the right color to Bob, as shown in the "
"demonstration. You have three possible colors to send and one is the right "
"color. If you need help click the 'help' button"
msgstr ""

#: ../src/edu/kit/iks/Cryptographics/DiffieHellman/Experiment/DHExperimentView.java:44
msgid ""
"Oh no. You choosed the private color. This color is meant to be private. If "
"you had send this color, Eve would be able to get the secret too, "
"afterwards. Please try again, by choosing another color and clicking the "
"'send color' button"
msgstr ""

#: ../src/edu/kit/iks/Cryptographics/DiffieHellman/Experiment/DHExperimentView.java:50
msgid ""
"Oh no. You choosed the public color. While Eve won't be able to get the "
"secret shared color, you still didn't follow the protocol instructions. Try "
"again by choosing another color."
msgstr ""

#: ../src/edu/kit/iks/Cryptographics/DiffieHellman/Experiment/DHExperimentView.java:54
msgid ""
"Good. You choosed to send your mixture to Bob. This is the right choice."
msgstr ""

#: ../src/edu/kit/iks/Cryptographics/DiffieHellman/Experiment/DHExperimentView.java:57
msgid ""
"Now it is Bobs turn. Click the continue button, so that Bob will choose his "
"private color and send you his mixture."
msgstr ""

#: ../src/edu/kit/iks/Cryptographics/DiffieHellman/Experiment/DHExperimentView.java:60
msgid ""
"This is the last step in the protocol. Choose the right colors to produce "
"the final secret, just like how it was explained at the demonstration."
msgstr ""

#: ../src/edu/kit/iks/Cryptographics/DiffieHellman/Experiment/DHExperimentView.java:64
msgid ""
"Congratulations, you choosed the right colors to mix, you and Bob "
"established a shared secret that Eve doesn not know"
msgstr ""

#: ../src/edu/kit/iks/Cryptographics/DiffieHellman/Experiment/DHExperimentView.java:72
msgid ""
"You have to choose a public color, to choose a different color you have to "
"click the '->' or '<-' Button. You can't do much wrong. When you are ready "
"click the 'send color' button"
msgstr ""

#: ../src/edu/kit/iks/Cryptographics/DiffieHellman/Experiment/DHExperimentView.java:77
msgid ""
"You have to choose a private color, which is not the same as the public "
"color. To choose a color, you have to click the '->' or the '<-' Button. You "
"can't do much wrong. When you are ready, click the 'mix colors' button"
msgstr ""

#: ../src/edu/kit/iks/Cryptographics/DiffieHellman/Experiment/DHExperimentView.java:82
msgid ""
"You have to send the right color, the right color is the one you have not "
"already sent, and the one you don't want to keep private. If you still have "
"no clue, try the three different colors"
msgstr ""

#: ../src/edu/kit/iks/Cryptographics/DiffieHellman/Experiment/DHExperimentView.java:86
msgid ""
"Just click the continue button and Bob will mix his color and will send it "
"to you"
msgstr ""

#: ../src/edu/kit/iks/Cryptographics/DiffieHellman/Experiment/DHExperimentView.java:89
msgid ""
"You have to choose the two colors that will be mixed to the final shared "
"secret. Tip: Why can't Eve compute the secret. Right you have a color that "
"Eve does not have, so have to use that one. The other color you have to "
"think about yourself, or try different colors till it works"
msgstr ""

#: ../src/edu/kit/iks/Cryptographics/DiffieHellman/Experiment/DHExperimentView.java:94
msgid "Mix with public color"
msgstr ""

#: ../src/edu/kit/iks/Cryptographics/DiffieHellman/Experiment/DHExperimentView.java:96
msgid "Mix colors to final secret"
msgstr ""

#: ../src/edu/kit/iks/Cryptographics/DiffieHellman/Experiment/DHExperimentView.java:100
msgid "The private color can't be the same as the public color"
msgstr ""

#: ../src/edu/kit/iks/Cryptographics/DiffieHellman/Experiment/DHExperimentView.java:103
msgid "Send color"
msgstr ""

#: ../src/edu/kit/iks/Cryptographics/DiffieHellman/Experiment/DHExperimentView.java:105
msgid "You choosed the wrong colors, try again"
msgstr ""

#: ../src/edu/kit/iks/Cryptographics/DiffieHellman/Experiment/YourTurnController.java:39
msgid "Start Experiment"
msgstr ""

#: ../src/edu/kit/iks/Cryptographics/DiffieHellman/Experiment/YourTurnController.java:47
msgid "Back to Demonstration"
msgstr ""

#: ../src/edu/kit/iks/Cryptographics/DiffieHellman/Experiment/YourTurnView.java:24
msgid ""
"Now it's your turn! Now you are Alice and try to establish a shared secret "
"with Bob, without Eve getting the secret. Your task will be to mix the right "
"Colors and to send the right Colors, just like in the Demonstration"
msgstr ""

#: ../src/edu/kit/iks/CryptographicsLib/AbstractVisualizationInfo.java:149
msgid "Easy"
msgstr ""

#: ../src/edu/kit/iks/CryptographicsLib/AbstractVisualizationInfo.java:150
msgid "Medium"
msgstr ""

#: ../src/edu/kit/iks/CryptographicsLib/AbstractVisualizationInfo.java:151
msgid "Hard"
msgstr ""

#: ../src/edu/kit/iks/CryptographicsLib/KeyboardView.java:146
msgid "keyboard-y"
msgstr "Y"

#: ../src/edu/kit/iks/CryptographicsLib/KeyboardView.java:154
msgid "keyboard-z"
msgstr "Z"

#: ../src/edu/kit/iks/CryptographicsLib/VisualizationView.java:41
msgid "Next"
msgstr ""

#: ../src/edu/kit/iks/CryptographicsLib/VisualizationView.java:44
msgid "Back"
msgstr ""
